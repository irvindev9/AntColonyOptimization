import numpy as np

from ant_colony import AntColony

from math import sin, cos, sqrt, atan2, radians

R = 6373.0 # Earth diameter

# coordinates (each array contains the coordinates of each city)
inputArray = [[565.0, 575.0],[25.0, 185.0],[345.0, 750.0],[945.0, 685.0],[845.0, 655.0],[880.0, 660.0],[25.0, 230.0],[525.0, 1000.0],[580.0, 1175.0],[650.0, 1130.0],[1605.0, 620.0 ],[1220.0, 580.0],[1465.0, 200.0],[1530.0, 5.0],[845.0, 680.0],[725.0, 370.0],[145.0, 665.0],[415.0, 635.0],[510.0, 875.0  ],[560.0, 365.0],[300.0, 465.0],[520.0, 585.0],[480.0, 415.0],[835.0, 625.0],[975.0, 580.0],[1215.0, 245.0],[1320.0, 315.0],[1250.0, 400.0],[660.0, 180.0],[410.0, 250.0],[420.0, 555.0],[575.0, 665.0],[1150.0, 1160.0],[700.0, 580.0],[685.0, 595.0],[685.0, 610.0],[770.0, 610.0],[795.0, 645.0],[720.0, 635.0],[760.0, 650.0],[475.0, 960.0],[95.0, 260.0],[875.0, 920.0],[700.0, 500.0],[555.0, 815.0],[830.0, 485.0],[1170.0, 65.0],[830.0, 610.0],[605.0, 625.0],[595.0, 360.0],[1340.0, 725.0],[1740.0, 245.0]]

distances = []
for index1 in range(len(inputArray)):
    tempArray = []
    lat1 = radians(inputArray[index1][0])
    lon1 = radians(inputArray[index1][1])
    for index2 in range(len(inputArray)):
        if index1 == index2:
            tempArray.append(np.inf)
        else:
            lat2 = radians(inputArray[index2][0])
            lon2 = radians(inputArray[index2][1])
            dlon = lon2 - lon1
            dlat = lat2 - lat1

            a = sin(dlat / 2)**2 + cos(lat1) * cos(lat2) * sin(dlon / 2)**2
            c = 2 * atan2(sqrt(a), sqrt(1 - a))

            distance = R * c
            tempArray.append(distance)
    distances.append(tempArray)

# print(distances)

distances = np.array(distances)

# distances = np.array([[np.inf,2451,713,1018,1631,1374,2408,213,2571,875,1420,2145,1972],
#                     [2451,np.inf,1745,1524,831,1240,959,2596,403,1589,1374,357,579],
#                     [713,1745,np.inf,355,920,803,1737,851,1858,262,940,1453,1260],
#                     [1018,1524,355,np.inf,700,862,1395,1123,1584,466,1056,1280,987],
#                     [1631,831,920,700,np.inf,663,1021,1769,949,796,879,586,371],
#                     [1374,1240,803,862,663,np.inf,1681,1551,1765,547,225,887,999],
#                     [2408,959,1737,1395,1021,1681,np.inf,2493,678,1724,1891,1114,701],
#                     [213,2596,851,1123,1769,1551,2493,np.inf,2699,1038,1605,2300,2099],
#                     [2571,403,1858,1584,949,1765,678,2699,np.inf,1744,1645,653,600],
#                     [875,1589,262,466,796,547,1724,1038,1744,np.inf,679,1272,1162],
#                     [1420,1374,940,1056,879,225,1891,1605,1645,679,np.inf,1017,1200],
#                     [2145,357,1453,1280,586,887,1114,2300,653,1272,1017,np.inf,504],
#                     [1972,579,1260,987,371,999,701,2099,600,1162,1200,504,np.inf]])


ant_colony = AntColony(distances, 10, 10, 100, 0.95, alpha=1, beta=1)
shortest_path = ant_colony.run()
print ("shorted_path: {}".format(shortest_path))

